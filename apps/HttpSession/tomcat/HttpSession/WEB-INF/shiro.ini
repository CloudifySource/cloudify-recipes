[main]

sessionManager = org.apache.shiro.web.session.mgt.StandardWebSessionManager

#set the sessionManager to use an enterprise cache for backing storage:
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
sessionManager.sessionDAO = $sessionDAO

sessionDAO.activeSessionsCacheName = %SPACE_URL%
# ensure the securityManager uses our native SessionManager:
securityManager.sessionManager = $sessionManager

# whatever your CacheManager implementation is, for example:
cacheManager = org.openspaces.sessions.shiro.GigaCacheManager

# Session data TTL/Lease in milliseconds
# In a multi container non-sticky mode, session should expire from GigaSpaces based on sessions last accessed time
# Default lease is 30 minutes - 30 * 60 * 1000 = 1800000
cacheManager.sessionLease = 1800000

# Keeps a local copy of session in the session manager and avoids remote read. Updates are propogated to the remote cluster. 
# Default value is false
cacheManager.cacheSessionLocally = false

# Session serializationType - JAVA/XML (default JAVA)
# cacheManager.serializationType = XML

# When using Externalizable classes with customized serialization and want to stick to serialization based on Reflection enable this option
# Default value is false
# cacheManager.registerReflectionConverter = true

# List of XStream converters that application would like to register 
# (Expecting that these are part of classpath or WEB-INF/lib)
# Pass them comma separated
# cacheManager.converterNameList = org.openspaces.xtreme.converter.XmlCalendarConverter

# When using secured GigaSpace cluster, pass the credentials here
# cacheManager.username = gs
# cacheManager.password = gs

# This will use GigaSpaces for _all_ of Shiro's caching needs (realms, etc), # not just for Session storage.
securityManager.cacheManager = $cacheManager

# Session validation
sessionValidationScheduler = org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler

# Session timeout  
securityManager.sessionManager.defaultSessionTimeout = 1800000

# Default is 3,600,000 millis = 1 hour:
sessionValidationScheduler.interval = 1800000

sessionValidationScheduler.sessionManager = $sessionManager

securityManager.sessionManager.sessionValidationScheduler = $sessionValidationScheduler
